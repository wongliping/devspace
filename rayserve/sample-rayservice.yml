# Make sure to increase resource requests and limits before using this example in production.
# For examples with more realistic resource configuration, see
# ray-cluster.complete.large.yaml and
# ray-cluster.autoscaler.large.yaml.
apiVersion: ray.io/v1
kind: RayService
metadata:
  name: rayservice-sample
spec:
  # serveConfigV2 takes a yaml multi-line scalar, which should be a Ray Serve multi-application config. See https://docs.ray.io/en/latest/serve/multi-app.html.
  # conda zip: https://raw.githubusercontent.com/wongliping/devspace/refs/heads/main/rayserve/rayserve-conda.zip
  serveConfigV2: |
    applications:
      - name: fruit_app
        import_path: fruit.deployment_graph
        route_prefix: /fruit
        runtime_env:
          working_dir: "https://github.com/ray-project/test_dag/archive/78b4a5da38796123d9f9ffff59bab2792a043e95.zip"
          conda: /home/ray/anaconda3/envs/rayservice-sample-env
        deployments:
          - name: MangoStand
            num_replicas: 1
            max_replicas_per_node: 1
            user_config:
              price: 3
            ray_actor_options:
              num_cpus: 0.1
          - name: OrangeStand
            num_replicas: 1
            user_config:
              price: 2
            ray_actor_options:
              num_cpus: 0.1
          - name: PearStand
            num_replicas: 1
            user_config:
              price: 1
            ray_actor_options:
              num_cpus: 0.1
          - name: FruitMarket
            num_replicas: 1
            ray_actor_options:
              num_cpus: 0.1
  rayClusterConfig:
    rayVersion: '2.9.0' # should match the Ray version in the image of the containers
    ######################headGroupSpecs#################################
    # Ray head pod template.
    headGroupSpec:
      # The `rayStartParams` are used to configure the `ray start` command.
      # See https://github.com/ray-project/kuberay/blob/master/docs/guidance/rayStartParams.md for the default settings of `rayStartParams` in KubeRay.
      # See https://docs.ray.io/en/latest/cluster/cli.html#ray-start for all available options in `rayStartParams`.
      rayStartParams:
        dashboard-host: '0.0.0.0'
      #pod template
      template:
        spec:
          initContainers:
            - name: init-container
              image: alpine:latest
              command:
                - sh
                - -c
                - |
                  wget https://raw.githubusercontent.com/wongliping/devspace/refs/heads/main/rayserve/rayserve-conda.zip
                  unzip -q rayserve-conda.zip -d /vol-mnt/rayservice-sample-env
                  ls -al /vol-mnt
                  ls -al /vol-mnt/rayservice-sample-env
              volumeMounts:
                - name: shared-vol
                  mountPath: /vol-mnt
          containers:
            - name: ray-head
              image: rayproject/ray:2.9.0
              resources:
                limits:
                  cpu: 1
                  memory: 2Gi
                requests:
                  cpu: 1
                  memory: 0.5Gi
              ports:
                - containerPort: 6379
                  name: gcs-server
                - containerPort: 8265 # Ray dashboard
                  name: dashboard
                - containerPort: 10001
                  name: client
                - containerPort: 8000
                  name: serve
              volumeMounts:
                - name: shared-vol
                  mountPath: /home/ray/anaconda3/envs
          volumes:
            - name: shared-vol
              emptyDir: {}
    workerGroupSpecs:
      # the pod replicas in this group typed worker
      - replicas: 1
        minReplicas: 1
        maxReplicas: 2
        # logical group name, for this called small-group, also can be functional
        groupName: small-group
        # The `rayStartParams` are used to configure the `ray start` command.
        # See https://github.com/ray-project/kuberay/blob/master/docs/guidance/rayStartParams.md for the default settings of `rayStartParams` in KubeRay.
        # See https://docs.ray.io/en/latest/cluster/cli.html#ray-start for all available options in `rayStartParams`.
        rayStartParams: {}
        #pod template
        template:
          spec:
            initContainers:
              - name: init-container
                image: alpine:latest
                command:
                  - sh
                  - -c
                  - |
                    wget https://raw.githubusercontent.com/wongliping/devspace/refs/heads/main/rayserve/rayserve-conda.zip
                    unzip -q rayserve-conda.zip -d /vol-mnt/rayservice-sample-env
                volumeMounts:
                  - name: shared-vol
                    mountPath: /vol-mnt
            containers:
              - name: ray-worker # must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc'
                image: rayproject/ray:2.9.0
                lifecycle:
                  preStop:
                    exec:
                      command: ["/bin/sh","-c","ray stop"]
                resources:
                  limits:
                    cpu: "1"
                    memory: "1Gi"
                  requests:
                    cpu: "500m"
                    memory: "0.5Gi"
                volumeMounts:
                  - name: shared-vol
                    mountPath: /home/ray/anaconda3/envs
            volumes:
              - name: shared-vol
                emptyDir: {}